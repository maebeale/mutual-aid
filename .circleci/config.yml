docker_image: &docker_image
  image: circleci/ruby:2.7.0-node

version: 2.1
commands:
  bundle_install:
    description: 'Performs the bundler installation, relying on the CircleCI cache for performance'
    steps:
      - restore_cache:
          keys:
            - bundler-cache-{{ checksum ".ruby-version" }}-{{ checksum "Gemfile.lock" }}
      - run:
          name: 'Bundle Install'
          command: |
            set -euxo pipefail
            bundle config set frozen 'true'
            bin/bundle install --path=.bundle
      - save_cache:
          key: bundler-cache-{{ checksum ".ruby-version" }}-{{ checksum "Gemfile.lock" }}
          paths:
            - .bundle
  yarn_install:
    description: 'Performs node module installation, relying on the CircleCI cache for performance'
    steps:
      - restore_cache:
          keys:
            - node-cache-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
      - run:
          name: 'Yarn Modules Install'
          command: bin/yarn install
      - save_cache:
          key: node-cache-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
  rubocop:
    description: 'Runs Rubocop'
    steps:
      - restore_cache:
          keys:
            - bundler-cache-{{ checksum ".ruby-version" }}-{{ checksum "Gemfile.lock" }}
      - restore_cache:
          keys:
            - node-cache-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
      - run:
          name: Rubocop
          command: |
            set -euxo pipefail
            bundle config path .bundle 
            bundle exec rubocop
  rspec_tests:
    description: 'Run the RSpec test suite'
    steps:
      - restore_cache:
          keys:
            - bundler-cache-{{ checksum ".ruby-version" }}-{{ checksum "Gemfile.lock" }}
      - restore_cache:
          keys:
            - node-cache-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
      - run:
          name: 'Run the RSpec Test Suite'
          command: |
            set -euxo pipefail
            bundle config path .bundle
            bundle exec rails db:setup
            bundle exec rspec --format progress --format RspecJunitFormatter -o ~/rspec/rspec.xml
  yarn_tests:
    description: 'Run the Mocha test suite'
    steps:
      - restore_cache:
          keys:
            - node-cache-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
      - run:
          name: 'Run the Mocha Test Suite'
          command: yarn test --reporter mocha-junit-reporter
          environment:
            MOCHA_FILE: test/test-results.xml

jobs:
  bundle:
    docker:
      - <<: *docker_image
    steps:
      - checkout
      - bundle_install
  node_modules:
    docker:
      - <<: *docker_image
    steps:
      - checkout
      - yarn_install
  rubocop:
    docker:
      - <<: *docker_image
    steps:
      - checkout
      - rubocop
  ruby_tests:
    docker:
      - <<: *docker_image
        environment:
          RAILS_ENV: test
          POSTGRES_HOST: 127.0.0.1
      - image: circleci/postgres:latest
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: mutualaid_test
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - checkout
      - rspec_tests
      - store_test_results:
          path: ~/rspec
  js_tests:
    docker:
      - <<: *docker_image
    steps:
      - checkout
      - yarn_tests
      - store_test_results:
          path: test
      - store_artifacts:
          path: test

workflows:
  version: 2.1
  mutual_aid:
    jobs:
      - bundle
      - node_modules
      - rubocop:
          requires:
            - bundle
            - node_modules
      - ruby_tests:
          requires:
            - bundle
            - node_modules
      - js_tests:
          requires:
            - node_modules
